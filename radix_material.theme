<?php

use Drupal\Core\Form\FormStateInterface;

/**
 * @file
 * Theme functions
 */

// Include all files from the includes directory.
$includes_path = dirname(__FILE__) . '/includes/*.inc';
foreach (glob($includes_path) as $filename) {
  require_once dirname(__FILE__) . '/includes/' . basename($filename);
}

/**
 * Implements hook_form_id_alter().
 */
function radix_material_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'user_login_form') {
    $form['name']['#attributes']['placeholder'] = $form['name']['#title'];
    $form['name']['#title_display'] = 'invisible';
    $form['pass']['#attributes']['placeholder'] = $form['pass']['#title'];
    $form['pass']['#title_display'] = 'invisible';
  }
  if($form_id == "views_exposed_form"){
    if (isset($form['search'])) {
            $form['search']['#attributes'] = array('placeholder' => array(t('search...')));
    }
  }
}

function radix_material_preprocess_form_element(&$variables) {
  if (in_array($variables['element']['#type'], array('checkbox', 'radio'))) {
    $variables['label']['#attributes']['class'][] = 'custom-control-label';
  }
}

/**
 * Implements hook_theme().

function radix_theme(&$existing, $type, $theme, $path) {
  return array(
    'radix_modal' => array(
      'variables' => array(
        'header' => NULL,
        'content' => NULL,
        'buttons' => NULL,
      ),
      'template' => 'radix-modal',
    )
  );
}
 */
/**
 * Implements template_proprocess_radix_modal().

function radix_preprocess_radix_modal(&$variables) {
  $variables['modal_id'] = drupal_html_id($variables['id']);

  // Create trigger button.
  if (isset($variables['trigger_button'])) {
    $trigger_button = $variables['trigger_button'];
    $text = (isset($trigger_button['text'])) ? $trigger_button['text'] : t('Open');
    $attributes = array(
      'data-toggle' => 'modal',
      'data-target' => '#' . $variables['modal_id'],
      'class' => array('btn', 'btn-default')
    );
    
    if (isset($trigger_button['attributes'])) {
      $attributes = array_merge($attributes, $trigger_button['attributes']);
    }

    $variables['trigger_button']['#markup'] = l($text, '', array(
      'absolute' => TRUE,
      'fragment' => FALSE,
      'attributes' => $attributes,
    ));
  }

  // Format content and add to template.
  if (isset($variables['content'])) {
    if (is_string($variables['content'])) {
      $variables['content']['#markup'] = $variables['content'];
    }
  }

  // Format modal butttons.
  if (isset($variables['buttons'])) {
    if (count($variables['buttons'])) {
      foreach ($variables['buttons'] as $key => $button) {
        $text = isset($button['text']) ? $button['text'] : '';
        $link = isset($button['link']) ? $button['link'] : '';
        $options = array();

        // If not link is provided, set as fragment.
        if (empty($link)) {
          $options['absolute'] = TRUE;
          $options['fragment'] = FALSE;
        }

        // Merge options.
        $options['attributes'] = array('class' => array('btn', 'btn-default'));
        if (isset($button['attributes'])) {
          $options['attributes'] = array_merge($options['attributes'], $button['attributes']);
        }

        $variables['buttons'][$key] = l($button['text'], $link, $options);
      }
    }
  }
}
 */
